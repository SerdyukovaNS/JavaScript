<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <!-- 1. Написать функцию, преобразующую число в объект. Передавая на вход число от 0 до 999, мы должны получить на выходе объект, в котором в соответствующих свойствах описаны единицы, десятки и сотни. Например, для числа 245 мы должны получить следующий объект: {‘единицы’: 5, ‘десятки’: 4, ‘сотни’: 2}. Если число превышает 999, необходимо выдать соответствующее сообщение с помощью console.log и вернуть пустой объект.-->
 <script>
        var number = prompt("Введите число от 0 до 999!", 0);

        function numberToObject(number){
            var obj={единицы: 0, десятки: 0, сотни: 0};
    
            if (number > 999) {
                obj={};
                console.log("Число превышает 999", obj);
            } 
            else if (number >= 0 && number.length>0) {
                switch (number.length) {
                case 3:
                obj.сотни = parseInt(number[number.length-3]);
                case 2:
                obj.десятки = parseInt(number[number.length-2]);
                case 1:
                obj.единицы = parseInt(number[number.length-1]);
                break;
            default: 
                obj.единицы = parseInt(number[2]);
                obj.десятки = parseInt(number[1]);
                obj.сотни = parseInt(number[0]);
                }
                console.log('Число: ', number, obj);
            }
            else 
                console.log("Неверно введено число");
        }

            numberToObject(number);

 </script>

<!-- 2.Продолжить работу с интернет-магазином:
2.1. В прошлом домашнем задании вы реализовали корзину на базе массивов. Какими объектами можно заменить их элементы?
2.2. Реализуйте такие объекты.
2.3. Перенести функционал подсчета корзины на объектно-ориентированную базу.-->
<script>
    const cart = {
		goods: [
		    {
	        product_name: 'product_1',
                price: 700,
                count: 2	
		    },
            {
                product_name: 'product_2',
                price: 1200,
                count: 4	
            },
            {
                product_name: 'product_3',
                price: 4500,
                count: 3
            }
			],
		totalPrice() {
            return this.goods.reduce((sum, item) => sum + item.price * item.count, 0);   
			},
						
	}
    console.log(cart.totalPrice());

</script>


</body>
</html>
